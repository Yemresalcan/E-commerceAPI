name: Simple CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  DOTNET_VERSION: '9.0.x'

jobs:
  # Build Job
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore

    - name: Build solution
      run: dotnet build --no-restore --configuration Release

    - name: Build success notification
      run: echo "✅ Build completed successfully!"

  # Docker Build Job
  docker-build:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      run: |
        docker build -t ecommerce-api:latest .
        echo "🐳 Docker image built successfully!"

  # Monitoring Stack Test
  monitoring-test:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Test monitoring stack
      run: |
        echo "📊 Testing monitoring configuration..."
        if [ -f "docker-compose.simple-monitoring.yml" ]; then
          echo "✅ Monitoring stack configuration found"
        fi
        if [ -f "config/simple-prometheus.yml" ]; then
          echo "✅ Prometheus configuration found"
        fi
        echo "🎉 Monitoring stack ready for deployment!"

  # Success Notification
  notify-success:
    runs-on: ubuntu-latest
    needs: [build, docker-build, monitoring-test]
    if: success()
    
    steps:
    - name: Success notification
      run: |
        echo "🎉 E-Commerce API Pipeline Successful!"
        echo "✅ Build: Passed"
        echo "🐳 Docker: Built"
        echo "📊 Monitoring: Ready"
        echo "🚀 Ready for deployment!"